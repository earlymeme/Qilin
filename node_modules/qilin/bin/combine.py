#coding:utf-8
import re,codecs,os,sys

BASE_PATH = "e:/static"

def getCode(p):
    try:
        f = file(p,"r")
        code = f.read();
        f.close()
        #utf8编码文件可能存在bom信息，需要剔除否则会导致样式文件失效
        if code[:3] == codecs.BOM_UTF8:
            return code[3:]
        else:
            return code
    except IOError, (errno, strerror):
        return "file not found"

def isPath(p):
    return p[0:3] == "../"

def isPHP(p):
    return p[-3:] == "php"

def isFile(p):
    return p.find("/") == -1

reExt = re.compile(r'\<\?(?:include|require)\(\"(.*?)\"\)\;\?\>', re.M)

def combinefile(code,base):
    #print base
    plist = reExt.findall(code)
    temp = "",
    p = ""
    for i in range(1,len(plist)+1):
        p = plist[i-1]
        temp = getCode(os.path.realpath(base + '/' + p))
        if len(reExt.findall(temp)) > 0:
            temp = combinefile(temp,os.path.split(base + '/' + p)[0]) 
        reTemp = re.compile(r'\<\?(?:include|require)\(\"(?:' + p + ')\"\)\;\?\>', re.M);
        code =  reTemp.sub(temp,code)
    return code


#e:/static/dailybuild/
#print os.path.normpath('e:/static/dailybuild/Movie_Pages/..')
#e:/static/dailybuild/
#print os.path.realpath('e:/static/dailybuild/Movie_Pages/../section/main.htm')
pdir = ""
#python combine.py e:/static/ /cphptest/test.php
if len(sys.argv) == 3 and not sys.argv[2] == "":
    BASE_PATH = sys.argv[1]
    pdir = BASE_PATH + sys.argv[2]
    code = getCode(pdir)
    html = combinefile(code,os.path.split(pdir)[0])
    print html
else:
    print ""

